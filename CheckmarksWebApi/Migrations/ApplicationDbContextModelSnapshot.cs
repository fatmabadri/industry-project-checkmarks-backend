// <auto-generated />
using System;
using CheckmarksWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CheckmarksWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("CheckmarksWebApi.Models.NICEClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("NICEClasses");
                });

            modelBuilder.Entity("CheckmarksWebApi.Models.NICETerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("NICETerms");
                });

            modelBuilder.Entity("CheckmarksWebApi.Models.Trademark", b =>
                {
                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApplicationNumberL")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FileDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("IntrnlRenewDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MediaUrls")
                        .HasColumnType("TEXT");

                    b.Property<string>("NiceClasses")
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RegDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusDescEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("TmType")
                        .HasColumnType("TEXT");

                    b.HasKey("ApplicationNumber");

                    b.ToTable("Trademarks");
                });

            modelBuilder.Entity("CheckmarksWebApi.Models.NICETerm", b =>
                {
                    b.HasOne("CheckmarksWebApi.Models.NICEClass", "NICEClass")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
